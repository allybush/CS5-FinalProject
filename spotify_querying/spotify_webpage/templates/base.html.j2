

  <!DOCTYPE html>
  <html lang=en dir=ltr>
    <head>
      <meta charset=utf-8>
      <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
      <link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css' integrity='sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T' crossorigin='anonymous'>
      <title>
        {% block title %} title empty {% endblock %}
      </title>
      <script type="text/javascript" src="https://code.jquery.com/jquery.min.js"></script>

      <script>
      function myFunction() {
        var x = document.getElementById("myDIV");

        if (x.style.display === "none") {
          x.style.display = "block";
        } else {
          x.style.display = "none";
        }
      }
      function yay() {
        var y = document.getElementById('myDIV');
          y.style.display = "none";
      }

      function random(){
           var soundFile = "static/songs/"+Math.round(Math.random() * (1000 - 1) + 1)+".wav";
           document.getElementById("player").innerHTML="<embed src=\""+soundFile+"\" hidden=\"false\" loop=\"false\" />";
      }
          jQuery(document).ready(function () {
              var $ = jQuery;
              var myRecorder = {
                  objects: {
                      context: null,
                      stream: null,
                      recorder: null
                  },
                  init: function () {
                      if (null === myRecorder.objects.context) {
                          myRecorder.objects.context = new (
                                  window.AudioContext || window.webkitAudioContext
                                  );
                      }
                  },
                  start: function () {
                      var options = {audio: true, video: false};
                      navigator.mediaDevices.getUserMedia(options).then(function (stream) {
                          myRecorder.objects.stream = stream;
                          myRecorder.objects.recorder = new Recorder(
                                  myRecorder.objects.context.createMediaStreamSource(stream),
                                  {numChannels: 1}
                          );
                          myRecorder.objects.recorder.record();
                      }).catch(function (err) {});
                  },
                  stop: function (listObject) {
                      if (null !== myRecorder.objects.stream) {
                          myRecorder.objects.stream.getAudioTracks()[0].stop();
                      }
                      if (null !== myRecorder.objects.recorder) {
                          myRecorder.objects.recorder.stop();

                          if (null !== listObject
                                  && 'object' === typeof listObject
                                  && listObject.length > 0) {

                              myRecorder.objects.recorder.exportWAV(function (blob) {
                                  var url = (window.URL || window.webkitURL)
                                          .createObjectURL(blob);

                                  var audioObject = $('<audio controls></audio>')
                                          .attr('src', url);

                                  var downloadObject = $('<a>&#9660;</a>')
                                          .attr('href', url)


                                  var holderObject = $('<div class="row"></div>')
                                          .append(audioObject)
                                          .append(downloadObject);

                                  listObject.append(holderObject);
                              });
                          }
                      }
                  }
              };

              var listObject = $('[data-role="recordings"]');

              $('[data-role="controls"] > button').click(function () {

                  myRecorder.init();

                  var buttonState = !!$(this).attr('data-recording');

                  if (!buttonState) {
                      $(this).attr('data-recording', 'true');
                      myRecorder.start();
                  } else {
                      $(this).attr('data-recording', '');
                      myRecorder.stop(listObject);
                  }
              });
          });
      </script>
    </head>
    <body onload="yay()">
      {% block body %} body empty {% endblock %}
      <script src='https://code.jquery.com/jquery-3.3.1.slim.min.js' integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo' crossorigin='anonymous'></script>
  <script src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js' integrity='sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1' crossorigin='anonymous'></script>
  <script src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js' integrity='sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM' crossorigin='anonymous'></script>
                <script src="{{ url_for('static', filename='functions.js') }}"></script>

    </body>
  </html>
